openapi: 3.0.3
info:
  title: Library Management API
  version: 1.1.0  
  description: API for managing books and authors in a library.
servers:
  - url: http://localhost:8080/api
paths:
  /books:
    get:
      summary: Retrieve a list of books with pagination
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page (default is 50)
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: A list of books retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    put:
      summary: Create or update a book (CrupdateBook)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateBook'
      responses:
        '200':
          description: Book created or updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'

    put:
      summary: Associate an author with a book by IDs
      parameters:
        - name: bookId
          in: path
          required: true
          description: ID of the book to update
          schema:
            type: string
        - name: authorId
          in: path
          required: true
          description: ID of the author to associate with the book
          schema:
            type: string
      responses:
        '204':
          description: Author associated with book successfully.

    put:
      summary: Update multiple authors for multiple books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateBookAuthor'
      responses:
        '204':
          description: Authors updated successfully for specified books.
  /authors:
    get:
      summary: Retrieve a list of authors with pagination
      parameters:
        - name: page
          in: query
          description: The page number to retrieve (default is 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: The number of items per page (default is 50)
          required: false
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: A list of authors retrieved successfully.
          content:
            application/json:
              schema:
                type: array 
                items:
                  $ref: '#/components/schemas/Author'
components:
  schemas:
    Book:
      type: object 
      properties:
        id:
          type: string 
        bookName:
          type: string 
        pageNumbers:
          type: integer 
        topic:
          type: string 
          enum: [ROMANCE, COMEDY, OTHER]
        releaseDate:
          type: string 
          format: date 

    CrupdateBook:
      type: object 
      properties:
        id:
          type: string 
        bookName:
          type: string 
        pageNumbers:
          type: integer 
        topic:
          type: string 
          enum: [ROMANCE, COMEDY, OTHER]
        releaseDate:
          type: string 
          format: date 

    UpdateBookAuthor:
      type: object 
      properties:
        bookId:
          type: string 
        authorId:
          type: string 

    Author:
      type: object 
      properties:
        id:
          type:string 
        name:
           type:string 
       sex :
           type:string 
           enum:[M,F]
